AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Env:
    Type: String
    Default: dev
    AllowedValues:
      - prod
      - stg
      - dev
  SystemName:
    Type: String
    Default: network
    AllowedPattern: ^network$


  VpcCidr:
    Type: String
    AllowedPattern: ^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/(1[6-9]|2[0-9]|3[0-2])$
    Default: 10.0.0.0/16

  PublicSubnet1aCidr:
    Type: String
    AllowedPattern: ^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/(1[6-9]|2[0-9]|3[0-2])$
    Default: 10.0.0.0/24
  PublicSubnet1cCidr:
    Type: String
    AllowedPattern: ^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/(1[6-9]|2[0-9]|3[0-2])$
    Default: 10.0.1.0/24
  PrivateSubnet1aCidr:
    Type: String
    AllowedPattern: ^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/(1[6-9]|2[0-9]|3[0-2])$
    Default: 10.0.2.0/23
  PrivateSubnet1cCidr:
    Type: String
    AllowedPattern: ^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/(1[6-9]|2[0-9]|3[0-2])$
    Default: 10.0.4.0/23


Resources:
  # VPC
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${Env}-vpc



  # Subnets
  ## Public Subnets
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref Vpc
      CidrBlock: !Ref PublicSubnet1aCidr
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Sub ${Env}-public-subnet1-1a

  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    
    Properties:
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref Vpc
      CidrBlock: !Ref PublicSubnet1cCidr
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: !Sub ${Env}-public-subnet2-1c

  # Subnets
  ## Private Subnets
  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref Vpc
      CidrBlock: !Ref PrivateSubnet1aCidr
      Tags:
        - Key: Name
          Value: !Sub ${Env}-private-subnet1-1a
  PrivateSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      VpcId: !Ref Vpc
      CidrBlock: !Ref PrivateSubnet1cCidr
      Tags:
        - Key: Name
          Value: !Sub ${Env}-private-subnet2-1c
  
  # Internet Gateway
  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Env}-igw
  IgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref Igw


# NAT Gateway
  Ngw1a:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EipForNgw1.AllocationId
      SubnetId: !Ref PublicSubnet1a
      Tags:
        - Key: Name
          Value: !Sub ${Env}-ngw-1a
  Ngw1c:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EipForNgw2.AllocationId
      SubnetId: !Ref PublicSubnet1c
      Tags:
        - Key: Name
          Value: !Sub ${Env}-ngw-2a


## EIP for NAT Gateway
  EipForNgw1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  EipForNgw2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc


 # RouteTable
  ## Public
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${Env}-public-rtb
  PublicRouteDefault:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw


 ### RouteTable Association PublicSubnets
  RouteTableAssociationPublicSubnet1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1a
      RouteTableId: !Ref PublicRouteTable
  RouteTableAssociationPublicSubnet1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1c
      RouteTableId: !Ref PublicRouteTable

## Private
  PrivateRouteTable1a:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${Env}-private-rtb1
  PrivateRouteDefault1a:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1a
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref Ngw1a
  PrivateRouteTable1c:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${Env}-private-rtb1
  PrivateRouteDefault1c:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1c
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref Ngw1c
  ### RouteTable Association PrivateSubnets
  RouteTableAssociationPrivateSubnet1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1a
      RouteTableId: !Ref PrivateRouteTable1a
  RouteTableAssociationPrivateSubnet1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1c
      RouteTableId: !Ref PrivateRouteTable1c

  
  

Outputs:
  Vpc:
    Value: !Ref Vpc
    Export:
      Name: !Sub ${AWS::StackName}-Vpc
  PublicSubnet1a:
    Value: !Ref PublicSubnet1a
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet-1a
  PublicSubnet1c:
    Value: !Ref PublicSubnet1c
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet-1c
  PrivateSubnet1a:
    Value: !Ref PrivateSubnet1a
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet-1a
  PrivateSubnet1c:
    Value: !Ref PrivateSubnet1c
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet-1c
  